# GNU Make project makefile autogenerated by Premake
ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = ../release
  TARGET     = $(TARGETDIR)/Irrlicht.dll
  DEFINES   += -DUNICODE -D_UNICODE -DWIN32 -D_WINDOWS -DIRRLICHT_EXPORTS -DNDEBUG
  INCLUDES  += -Iinclude -Iinclude/io -Iinclude/aesGladman -Iinclude/video -Iinclude/scene -Iinclude/gui -I../freetype/include -I../zlib -I../libpng -I../jpeglib -I../bzip2 -I../lzma
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -Wall -std=c++0x -U__STRICT_ANSI__
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -Wl,--out-implib="../release/libIrrlicht.a" -L../release
  LIBS      += -lIrrlichtVideo -lIrrlichtGui -lIrrlichtScene -lIrrlichtIO -laesGladman -lfreetype -lwinmm -lgdi32 -lshlwapi -lvfw32 -limm32 -lpng -ljpeg -lbzip2 -llzma -lz -lopengl32
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../release/libIrrlichtVideo.a ../release/libIrrlichtGui.a ../release/libIrrlichtScene.a ../release/libIrrlichtIO.a ../release/libaesGladman.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = ../debug
  TARGET     = $(TARGETDIR)/Irrlicht.dll
  DEFINES   += -DUNICODE -D_UNICODE -DWIN32 -D_WINDOWS -DIRRLICHT_EXPORTS
  INCLUDES  += -Iinclude -Iinclude/io -Iinclude/aesGladman -Iinclude/video -Iinclude/scene -Iinclude/gui -I../freetype/include -I../zlib -I../libpng -I../jpeglib -I../bzip2 -I../lzma
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -Wall -std=c++0x -U__STRICT_ANSI__
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -Wl,--out-implib="../debug/libIrrlicht.a" -L../debug
  LIBS      += -lIrrlichtVideo -lIrrlichtGui -lIrrlichtScene -lIrrlichtIO -laesGladman -lfreetype -lwinmm -lgdi32 -lshlwapi -lvfw32 -limm32 -lpng -ljpeg -lbzip2 -llzma -lz -lopengl32
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../debug/libIrrlichtVideo.a ../debug/libIrrlichtGui.a ../debug/libIrrlichtScene.a ../debug/libIrrlichtIO.a ../debug/libaesGladman.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/CIrrDeviceConsole.o \
	$(OBJDIR)/CIrrDeviceFB.o \
	$(OBJDIR)/CIrrDeviceLinux.o \
	$(OBJDIR)/CIrrDeviceSDL.o \
	$(OBJDIR)/CIrrDeviceStub.o \
	$(OBJDIR)/CIrrDeviceWin32.o \
	$(OBJDIR)/CIrrDeviceWinCE.o \
	$(OBJDIR)/CLogger.o \
	$(OBJDIR)/COSOperator.o \
	$(OBJDIR)/Irrlicht.o \
	$(OBJDIR)/os.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Irrlicht
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Irrlicht
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/CIrrDeviceConsole.o: src/CIrrDeviceConsole.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceFB.o: src/CIrrDeviceFB.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceLinux.o: src/CIrrDeviceLinux.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceSDL.o: src/CIrrDeviceSDL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceStub.o: src/CIrrDeviceStub.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceWin32.o: src/CIrrDeviceWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CIrrDeviceWinCE.o: src/CIrrDeviceWinCE.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CLogger.o: src/CLogger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/COSOperator.o: src/COSOperator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Irrlicht.o: src/Irrlicht.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/os.o: src/os.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
